// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discord.proto

package discord

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GuildList struct {
	Guilds               []*Guild `protobuf:"bytes,1,rep,name=guilds,proto3" json:"guilds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuildList) Reset()         { *m = GuildList{} }
func (m *GuildList) String() string { return proto.CompactTextString(m) }
func (*GuildList) ProtoMessage()    {}
func (*GuildList) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{1}
}

func (m *GuildList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuildList.Unmarshal(m, b)
}
func (m *GuildList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuildList.Marshal(b, m, deterministic)
}
func (m *GuildList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildList.Merge(m, src)
}
func (m *GuildList) XXX_Size() int {
	return xxx_messageInfo_GuildList.Size(m)
}
func (m *GuildList) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildList.DiscardUnknown(m)
}

var xxx_messageInfo_GuildList proto.InternalMessageInfo

func (m *GuildList) GetGuilds() []*Guild {
	if m != nil {
		return m.Guilds
	}
	return nil
}

type Guild struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	OwnerID              string   `protobuf:"bytes,4,opt,name=ownerID,proto3" json:"ownerID,omitempty"`
	MemberCount          int32    `protobuf:"varint,5,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	Splash               string   `protobuf:"bytes,6,opt,name=splash,proto3" json:"splash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Guild) Reset()         { *m = Guild{} }
func (m *Guild) String() string { return proto.CompactTextString(m) }
func (*Guild) ProtoMessage()    {}
func (*Guild) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{2}
}

func (m *Guild) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Guild.Unmarshal(m, b)
}
func (m *Guild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Guild.Marshal(b, m, deterministic)
}
func (m *Guild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guild.Merge(m, src)
}
func (m *Guild) XXX_Size() int {
	return xxx_messageInfo_Guild.Size(m)
}
func (m *Guild) XXX_DiscardUnknown() {
	xxx_messageInfo_Guild.DiscardUnknown(m)
}

var xxx_messageInfo_Guild proto.InternalMessageInfo

func (m *Guild) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Guild) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Guild) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Guild) GetOwnerID() string {
	if m != nil {
		return m.OwnerID
	}
	return ""
}

func (m *Guild) GetMemberCount() int32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *Guild) GetSplash() string {
	if m != nil {
		return m.Splash
	}
	return ""
}

type GuildRoles struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Roles                []*Role  `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuildRoles) Reset()         { *m = GuildRoles{} }
func (m *GuildRoles) String() string { return proto.CompactTextString(m) }
func (*GuildRoles) ProtoMessage()    {}
func (*GuildRoles) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{3}
}

func (m *GuildRoles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuildRoles.Unmarshal(m, b)
}
func (m *GuildRoles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuildRoles.Marshal(b, m, deterministic)
}
func (m *GuildRoles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildRoles.Merge(m, src)
}
func (m *GuildRoles) XXX_Size() int {
	return xxx_messageInfo_GuildRoles.Size(m)
}
func (m *GuildRoles) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildRoles.DiscardUnknown(m)
}

var xxx_messageInfo_GuildRoles proto.InternalMessageInfo

func (m *GuildRoles) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GuildRoles) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type GuildMembers struct {
	ID                   string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Members              []*Member `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GuildMembers) Reset()         { *m = GuildMembers{} }
func (m *GuildMembers) String() string { return proto.CompactTextString(m) }
func (*GuildMembers) ProtoMessage()    {}
func (*GuildMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{4}
}

func (m *GuildMembers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuildMembers.Unmarshal(m, b)
}
func (m *GuildMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuildMembers.Marshal(b, m, deterministic)
}
func (m *GuildMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuildMembers.Merge(m, src)
}
func (m *GuildMembers) XXX_Size() int {
	return xxx_messageInfo_GuildMembers.Size(m)
}
func (m *GuildMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_GuildMembers.DiscardUnknown(m)
}

var xxx_messageInfo_GuildMembers proto.InternalMessageInfo

func (m *GuildMembers) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GuildMembers) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

type Role struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Permissions          int64    `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Color                int32    `protobuf:"varint,4,opt,name=color,proto3" json:"color,omitempty"`
	Position             int32    `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`
	Managed              bool     `protobuf:"varint,6,opt,name=managed,proto3" json:"managed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{5}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetPermissions() int64 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

func (m *Role) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *Role) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *Role) GetManaged() bool {
	if m != nil {
		return m.Managed
	}
	return false
}

type Member struct {
	GuildID              string   `protobuf:"bytes,1,opt,name=guildID,proto3" json:"guildID,omitempty"`
	Roles                []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	Nick                 string   `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	User                 *User    `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{6}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetGuildID() string {
	if m != nil {
		return m.GuildID
	}
	return ""
}

func (m *Member) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Member) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *Member) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type User struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Discriminator        string   `protobuf:"bytes,3,opt,name=discriminator,proto3" json:"discriminator,omitempty"`
	Avatar               string   `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Bot                  string   `protobuf:"bytes,5,opt,name=bot,proto3" json:"bot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_d37f1fb6677774d8, []int{7}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetBot() string {
	if m != nil {
		return m.Bot
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*GuildList)(nil), "GuildList")
	proto.RegisterType((*Guild)(nil), "Guild")
	proto.RegisterType((*GuildRoles)(nil), "GuildRoles")
	proto.RegisterType((*GuildMembers)(nil), "GuildMembers")
	proto.RegisterType((*Role)(nil), "Role")
	proto.RegisterType((*Member)(nil), "Member")
	proto.RegisterType((*User)(nil), "User")
}

func init() { proto.RegisterFile("discord.proto", fileDescriptor_d37f1fb6677774d8) }

var fileDescriptor_d37f1fb6677774d8 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4f, 0xeb, 0x13, 0x31,
	0x10, 0x75, 0xbb, 0xff, 0xda, 0xa9, 0x8a, 0x04, 0x91, 0x58, 0x41, 0xd6, 0xe8, 0xa1, 0x20, 0xec,
	0xe1, 0xe7, 0xc9, 0xa3, 0x58, 0x91, 0x82, 0x5e, 0x22, 0x7e, 0x80, 0xb4, 0x0d, 0x35, 0xd8, 0x4d,
	0x96, 0x64, 0x5b, 0xf1, 0xea, 0x57, 0xf0, 0xe2, 0xc7, 0x95, 0x99, 0x64, 0x97, 0x4a, 0x2f, 0xde,
	0xe6, 0xbd, 0xcc, 0x74, 0x5e, 0xdf, 0xbc, 0x85, 0x07, 0x07, 0x13, 0xf6, 0xce, 0x1f, 0xda, 0xde,
	0xbb, 0xc1, 0x89, 0x1a, 0xca, 0x0f, 0x5d, 0x3f, 0xfc, 0x14, 0xaf, 0x61, 0xf1, 0xf1, 0x6c, 0x4e,
	0x87, 0x4f, 0x26, 0x0c, 0xec, 0x39, 0x54, 0x47, 0x04, 0x81, 0x67, 0x4d, 0xbe, 0x5e, 0xde, 0x55,
	0x2d, 0xbd, 0xc9, 0xc4, 0x8a, 0xdf, 0x19, 0x94, 0xc4, 0xb0, 0x87, 0x30, 0xdb, 0x6e, 0x78, 0xd6,
	0x64, 0xeb, 0x85, 0x9c, 0x6d, 0x37, 0x8c, 0x41, 0x61, 0x55, 0xa7, 0xf9, 0x8c, 0x18, 0xaa, 0x91,
	0x33, 0x7b, 0x67, 0x79, 0x1e, 0x39, 0xac, 0x19, 0x87, 0xda, 0xfd, 0xb0, 0xda, 0x6f, 0x37, 0xbc,
	0x20, 0x7a, 0x84, 0xac, 0x81, 0x65, 0xa7, 0xbb, 0x9d, 0xf6, 0xef, 0xdd, 0xd9, 0x0e, 0xbc, 0x6c,
	0xb2, 0x75, 0x29, 0xaf, 0x29, 0xf6, 0x04, 0xaa, 0xd0, 0x9f, 0x54, 0xf8, 0xc6, 0x2b, 0x1a, 0x4d,
	0x48, 0xbc, 0x05, 0x88, 0x32, 0xdd, 0x49, 0x87, 0x1b, 0x65, 0xcf, 0xa0, 0xf4, 0xf8, 0xc0, 0x67,
	0xf4, 0x97, 0xca, 0x16, 0xdb, 0x64, 0xe4, 0xc4, 0x3b, 0xb8, 0x4f, 0xa3, 0x9f, 0x69, 0xcd, 0xed,
	0xf0, 0x0b, 0xa8, 0xa3, 0x82, 0x71, 0xbc, 0x6e, 0x63, 0xab, 0x1c, 0x79, 0xf1, 0x27, 0x83, 0x02,
	0x7f, 0xf2, 0xbf, 0x2c, 0x69, 0x60, 0xd9, 0x6b, 0xdf, 0x99, 0x10, 0x8c, 0xb3, 0x81, 0x9c, 0xc9,
	0xe5, 0x35, 0xc5, 0x1e, 0x43, 0xb9, 0x77, 0x27, 0xe7, 0xc9, 0x9e, 0x52, 0x46, 0xc0, 0x56, 0x30,
	0xef, 0x5d, 0x30, 0x83, 0x71, 0x36, 0x39, 0x33, 0x61, 0xb4, 0xb4, 0x53, 0x56, 0x1d, 0xf5, 0x81,
	0x7c, 0x99, 0xcb, 0x11, 0x8a, 0x23, 0x54, 0x51, 0x2d, 0xf6, 0xd0, 0x09, 0x27, 0x81, 0x23, 0xc4,
	0x7d, 0xd1, 0x9e, 0xbc, 0xc9, 0xd7, 0x8b, 0xe4, 0x0b, 0x69, 0x37, 0xfb, 0xef, 0xe9, 0x46, 0x54,
	0xb3, 0xa7, 0x50, 0x9c, 0x83, 0xf6, 0xb4, 0x1f, 0x7d, 0xfc, 0x1a, 0xb4, 0x97, 0x44, 0x89, 0x5f,
	0x19, 0x14, 0x08, 0x6f, 0x3c, 0x58, 0xc1, 0x1c, 0x1b, 0xae, 0x7c, 0x98, 0x30, 0x7b, 0x15, 0x33,
	0xe9, 0x4d, 0x67, 0xac, 0x1a, 0x9c, 0x4f, 0x39, 0xf9, 0x97, 0xc4, 0xa3, 0xab, 0x8b, 0x1a, 0x94,
	0x4f, 0x5a, 0x12, 0x62, 0x8f, 0x20, 0xdf, 0xb9, 0x18, 0x93, 0x85, 0xc4, 0xf2, 0xae, 0x85, 0x7a,
	0x13, 0x33, 0xce, 0x5e, 0xc2, 0x12, 0xf3, 0xfc, 0x45, 0xfb, 0x0b, 0x5e, 0xb5, 0x6a, 0x29, 0xeb,
	0x2b, 0x68, 0xa7, 0xa8, 0x8b, 0x7b, 0xbb, 0x8a, 0xbe, 0x84, 0x37, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x73, 0x4c, 0xf8, 0x60, 0x1a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscordClient is the client API for Discord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscordClient interface {
	ListServers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GuildList, error)
}

type discordClient struct {
	cc *grpc.ClientConn
}

func NewDiscordClient(cc *grpc.ClientConn) DiscordClient {
	return &discordClient{cc}
}

func (c *discordClient) ListServers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GuildList, error) {
	out := new(GuildList)
	err := c.cc.Invoke(ctx, "/Discord/ListServers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscordServer is the server API for Discord service.
type DiscordServer interface {
	ListServers(context.Context, *Empty) (*GuildList, error)
}

// UnimplementedDiscordServer can be embedded to have forward compatible implementations.
type UnimplementedDiscordServer struct {
}

func (*UnimplementedDiscordServer) ListServers(ctx context.Context, req *Empty) (*GuildList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServers not implemented")
}

func RegisterDiscordServer(s *grpc.Server, srv DiscordServer) {
	s.RegisterService(&_Discord_serviceDesc, srv)
}

func _Discord_ListServers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscordServer).ListServers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Discord/ListServers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscordServer).ListServers(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Discord",
	HandlerType: (*DiscordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServers",
			Handler:    _Discord_ListServers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "discord.proto",
}
