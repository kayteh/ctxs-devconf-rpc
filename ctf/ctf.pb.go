// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ctf/ctf.proto

package ctf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Canary struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Percent              float32  `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Canary) Reset()         { *m = Canary{} }
func (m *Canary) String() string { return proto.CompactTextString(m) }
func (*Canary) ProtoMessage()    {}
func (*Canary) Descriptor() ([]byte, []int) {
	return fileDescriptor_6327d78a13af617a, []int{0}
}

func (m *Canary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Canary.Unmarshal(m, b)
}
func (m *Canary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Canary.Marshal(b, m, deterministic)
}
func (m *Canary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Canary.Merge(m, src)
}
func (m *Canary) XXX_Size() int {
	return xxx_messageInfo_Canary.Size(m)
}
func (m *Canary) XXX_DiscardUnknown() {
	xxx_messageInfo_Canary.DiscardUnknown(m)
}

var xxx_messageInfo_Canary proto.InternalMessageInfo

func (m *Canary) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Canary) GetPercent() float32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

type Canaries struct {
	Canaries             []*Canary `protobuf:"bytes,1,rep,name=canaries,proto3" json:"canaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Canaries) Reset()         { *m = Canaries{} }
func (m *Canaries) String() string { return proto.CompactTextString(m) }
func (*Canaries) ProtoMessage()    {}
func (*Canaries) Descriptor() ([]byte, []int) {
	return fileDescriptor_6327d78a13af617a, []int{1}
}

func (m *Canaries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Canaries.Unmarshal(m, b)
}
func (m *Canaries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Canaries.Marshal(b, m, deterministic)
}
func (m *Canaries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Canaries.Merge(m, src)
}
func (m *Canaries) XXX_Size() int {
	return xxx_messageInfo_Canaries.Size(m)
}
func (m *Canaries) XXX_DiscardUnknown() {
	xxx_messageInfo_Canaries.DiscardUnknown(m)
}

var xxx_messageInfo_Canaries proto.InternalMessageInfo

func (m *Canaries) GetCanaries() []*Canary {
	if m != nil {
		return m.Canaries
	}
	return nil
}

type CanaryQuery struct {
	Threshold            float32  `protobuf:"fixed32,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Canary               *Canary  `protobuf:"bytes,2,opt,name=canary,proto3" json:"canary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanaryQuery) Reset()         { *m = CanaryQuery{} }
func (m *CanaryQuery) String() string { return proto.CompactTextString(m) }
func (*CanaryQuery) ProtoMessage()    {}
func (*CanaryQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_6327d78a13af617a, []int{2}
}

func (m *CanaryQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanaryQuery.Unmarshal(m, b)
}
func (m *CanaryQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanaryQuery.Marshal(b, m, deterministic)
}
func (m *CanaryQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanaryQuery.Merge(m, src)
}
func (m *CanaryQuery) XXX_Size() int {
	return xxx_messageInfo_CanaryQuery.Size(m)
}
func (m *CanaryQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CanaryQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CanaryQuery proto.InternalMessageInfo

func (m *CanaryQuery) GetThreshold() float32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *CanaryQuery) GetCanary() *Canary {
	if m != nil {
		return m.Canary
	}
	return nil
}

func init() {
	proto.RegisterType((*Canary)(nil), "roleypoly.ctf.Canary")
	proto.RegisterType((*Canaries)(nil), "roleypoly.ctf.Canaries")
	proto.RegisterType((*CanaryQuery)(nil), "roleypoly.ctf.CanaryQuery")
}

func init() { proto.RegisterFile("ctf/ctf.proto", fileDescriptor_6327d78a13af617a) }

var fileDescriptor_6327d78a13af617a = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0x69, 0xf9, 0x87, 0x3f, 0x0c, 0x70, 0xd9, 0x44, 0x6c, 0x2a, 0x31, 0xa4, 0x27, 0x2e,
	0x6e, 0x23, 0x26, 0xde, 0xf4, 0x20, 0x28, 0x37, 0x13, 0x8b, 0x27, 0x6e, 0xed, 0x3a, 0x2d, 0x24,
	0x4b, 0xb7, 0x59, 0xa6, 0x87, 0x7e, 0x6c, 0xbf, 0x81, 0xe9, 0xb6, 0xd4, 0x98, 0x54, 0x0f, 0xc6,
	0xdb, 0xec, 0xcc, 0xbc, 0x37, 0xbf, 0xbc, 0x2c, 0x8c, 0x05, 0xc5, 0xbe, 0xa0, 0x98, 0x67, 0x5a,
	0x91, 0x62, 0x63, 0xad, 0x24, 0x16, 0x99, 0x92, 0x05, 0x17, 0x14, 0xbb, 0x17, 0x89, 0x52, 0x89,
	0x44, 0xdf, 0x0c, 0xa3, 0x3c, 0xf6, 0xf1, 0x90, 0x51, 0x51, 0xed, 0x7a, 0xb7, 0xd0, 0x5b, 0x86,
	0x69, 0xa8, 0x0b, 0xc6, 0xe0, 0x5f, 0x1a, 0x1e, 0xd0, 0xb1, 0x66, 0xd6, 0x7c, 0x10, 0x98, 0x9a,
	0x39, 0xf0, 0x3f, 0x43, 0x2d, 0x30, 0x25, 0xc7, 0x9e, 0x59, 0x73, 0x3b, 0x38, 0x3d, 0xbd, 0x3b,
	0xe8, 0x1b, 0xdd, 0x1e, 0x8f, 0xec, 0x1a, 0xfa, 0xa2, 0xae, 0x1d, 0x6b, 0xd6, 0x9d, 0x0f, 0x17,
	0x67, 0xfc, 0x0b, 0x02, 0xaf, 0x4e, 0x04, 0xcd, 0x9a, 0xb7, 0x85, 0x61, 0xd5, 0x7b, 0xc9, 0x51,
	0x17, 0x6c, 0x0a, 0x03, 0xda, 0x69, 0x3c, 0xee, 0x94, 0x7c, 0x33, 0x00, 0x76, 0xf0, 0xd9, 0x60,
	0x57, 0xd0, 0x33, 0xc2, 0xc2, 0x40, 0x7c, 0xeb, 0x5e, 0x2f, 0x2d, 0xde, 0x6d, 0xe8, 0x2e, 0x5f,
	0x9f, 0xd8, 0x0a, 0x86, 0x6b, 0xa4, 0x86, 0xd2, 0x6d, 0x55, 0x99, 0xfb, 0xee, 0x79, 0xdb, 0xac,
	0xe4, 0xec, 0xb0, 0x67, 0x98, 0x6c, 0x90, 0x36, 0xfb, 0x34, 0x91, 0x58, 0x1f, 0x52, 0x52, 0xaa,
	0x9c, 0x7e, 0x34, 0x9c, 0xf0, 0x2a, 0x74, 0x7e, 0x0a, 0x9d, 0x3f, 0x96, 0xa1, 0x37, 0x7e, 0x6b,
	0xa9, 0xa2, 0x50, 0xfe, 0x85, 0xdf, 0x3d, 0x8c, 0x96, 0x1a, 0x43, 0xaa, 0xe1, 0x58, 0x7b, 0x38,
	0x6e, 0x7b, 0xdb, 0xeb, 0xb0, 0x15, 0x8c, 0x56, 0x28, 0xb1, 0xd1, 0xff, 0x8a, 0xe2, 0xe1, 0x72,
	0x3b, 0x4d, 0xf6, 0xb4, 0xcb, 0x23, 0x2e, 0xd4, 0xc1, 0x6f, 0x1c, 0x7c, 0x9d, 0x89, 0xf2, 0x63,
	0x46, 0x3d, 0xa3, 0xb8, 0xf9, 0x08, 0x00, 0x00, 0xff, 0xff, 0x65, 0x62, 0x80, 0x9a, 0xaa, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CTFClient is the client API for CTF service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CTFClient interface {
	GetCanaries(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*Canaries, error)
	SetSingleCanaryRollout(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*empty.Empty, error)
	SetGlobalCanaryRollout(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateCanary(ctx context.Context, in *Canary, opts ...grpc.CallOption) (*Canary, error)
	DeleteCanary(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*empty.Empty, error)
}

type cTFClient struct {
	cc *grpc.ClientConn
}

func NewCTFClient(cc *grpc.ClientConn) CTFClient {
	return &cTFClient{cc}
}

func (c *cTFClient) GetCanaries(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*Canaries, error) {
	out := new(Canaries)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/GetCanaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) SetSingleCanaryRollout(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/SetSingleCanaryRollout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) SetGlobalCanaryRollout(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/SetGlobalCanaryRollout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) CreateCanary(ctx context.Context, in *Canary, opts ...grpc.CallOption) (*Canary, error) {
	out := new(Canary)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/CreateCanary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cTFClient) DeleteCanary(ctx context.Context, in *CanaryQuery, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/roleypoly.ctf.CTF/DeleteCanary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CTFServer is the server API for CTF service.
type CTFServer interface {
	GetCanaries(context.Context, *CanaryQuery) (*Canaries, error)
	SetSingleCanaryRollout(context.Context, *CanaryQuery) (*empty.Empty, error)
	SetGlobalCanaryRollout(context.Context, *CanaryQuery) (*empty.Empty, error)
	CreateCanary(context.Context, *Canary) (*Canary, error)
	DeleteCanary(context.Context, *CanaryQuery) (*empty.Empty, error)
}

// UnimplementedCTFServer can be embedded to have forward compatible implementations.
type UnimplementedCTFServer struct {
}

func (*UnimplementedCTFServer) GetCanaries(ctx context.Context, req *CanaryQuery) (*Canaries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCanaries not implemented")
}
func (*UnimplementedCTFServer) SetSingleCanaryRollout(ctx context.Context, req *CanaryQuery) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSingleCanaryRollout not implemented")
}
func (*UnimplementedCTFServer) SetGlobalCanaryRollout(ctx context.Context, req *CanaryQuery) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGlobalCanaryRollout not implemented")
}
func (*UnimplementedCTFServer) CreateCanary(ctx context.Context, req *Canary) (*Canary, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCanary not implemented")
}
func (*UnimplementedCTFServer) DeleteCanary(ctx context.Context, req *CanaryQuery) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCanary not implemented")
}

func RegisterCTFServer(s *grpc.Server, srv CTFServer) {
	s.RegisterService(&_CTF_serviceDesc, srv)
}

func _CTF_GetCanaries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanaryQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).GetCanaries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/GetCanaries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).GetCanaries(ctx, req.(*CanaryQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_SetSingleCanaryRollout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanaryQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).SetSingleCanaryRollout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/SetSingleCanaryRollout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).SetSingleCanaryRollout(ctx, req.(*CanaryQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_SetGlobalCanaryRollout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanaryQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).SetGlobalCanaryRollout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/SetGlobalCanaryRollout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).SetGlobalCanaryRollout(ctx, req.(*CanaryQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_CreateCanary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Canary)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).CreateCanary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/CreateCanary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).CreateCanary(ctx, req.(*Canary))
	}
	return interceptor(ctx, in, info, handler)
}

func _CTF_DeleteCanary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CanaryQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CTFServer).DeleteCanary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roleypoly.ctf.CTF/DeleteCanary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CTFServer).DeleteCanary(ctx, req.(*CanaryQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _CTF_serviceDesc = grpc.ServiceDesc{
	ServiceName: "roleypoly.ctf.CTF",
	HandlerType: (*CTFServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCanaries",
			Handler:    _CTF_GetCanaries_Handler,
		},
		{
			MethodName: "SetSingleCanaryRollout",
			Handler:    _CTF_SetSingleCanaryRollout_Handler,
		},
		{
			MethodName: "SetGlobalCanaryRollout",
			Handler:    _CTF_SetGlobalCanaryRollout_Handler,
		},
		{
			MethodName: "CreateCanary",
			Handler:    _CTF_CreateCanary_Handler,
		},
		{
			MethodName: "DeleteCanary",
			Handler:    _CTF_DeleteCanary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ctf/ctf.proto",
}
